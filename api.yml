swagger: "2.0"
info:
  description: "Entrypoint for concept publish notifications from the Smartlogic Semaphore system"
  version: "1.0.0"
  title: "Smartlogic Notifier"
  contact:
    name: Universal Publishing
    email: Universal.Publishing.Platform@ft.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: publishing-prod-up.ft.com
schemes:
  - http
  - https
basePath: /

paths:
  /notify:
    post:
      summary: Notification endpoint
      description: Receives a notification message from Smartlogic and gets the full concepts.
      tags:
        - Functional
      produces:
        - application/json
      parameters:
        - name: modifiedGraphId
          in: query
          required: true
          description: ID of the model which was changed.
        - name: affectedGraphId
          in: query
          required: true
          description: ID of a model which generated the notification.  In normal use, will be the same as modifiedGraphId.
        - name: lastChangeDate
          in: query
          required: true
          description: Timestamp of the change which generated this notification. The timestamp is formatted according to ISO 8601
      responses:
        200:
          description: When the message was successfully processed and the concept(s) added to Kafka.
          examples:
            application/json:
              message: Concepts successfully ingested
              uuids:
                - 82ccd87b-2a6a-422e-a694-6ed15a25854d
        400:
          description: The modifiedGraphId, affectedGraphId and lastChangeDate query parameters are not passed in or are not in the correct format.
        405:
          description: If any HTTP method other than POST is received.
        500:
          description: There was a problem obtaining the full concept or sending it to Kafka.
          examples:
            application/json:
              message: Unable to retrieve concept from Smartlogic
              uuid: 61d707b5-6fab-3541-b017-49b72de80772
        503:
          description: A connection to the Smartlogic API cannot be made.
          examples:
            application/json:
              message: Unable to connect to Smartlogic

  /force-notify:
      post:
        summary: Forced notification endpoint
        description: Receives a list of concepts to ingest from Smartlogic and push into the pipeline.
        tags:
          - Functional
        consumes:
          - application/json
        produces:
          - application/json
        parameters:
          - name: payload
            description: "List of UUIDs to be ingested"
            in: body
            required: true
            schema:
              type: object
              properties:
                uuids:
                  type: array
                  items:
                    type: string
                  example:
                    - 82ccd87b-2a6a-422e-a694-6ed15a25854d
                    - c4ea7c11-9387-4a0e-aa91-a3c077eaaeba
        responses:
          200:
            description: When the message was successfully processed and the concept(s) added to Kafka.
            examples:
              application/json:
                message: Concepts successfully ingested
                uuids:
                  - 82ccd87b-2a6a-422e-a694-6ed15a25854d
                  - c4ea7c11-9387-4a0e-aa91-a3c077eaaeba
          400:
            description: The payload is not correctly formatted (JSON with valid UUIDs).
          405:
            description: If any HTTP method other than POST is received.
          500:
            description: There was a problem obtaining the full concept or sending it to Kafka.
            examples:
              application/json:
                message: Unable to retrieve concept from Smartlogic
                uuid: 61d707b5-6fab-3541-b017-49b72de80772
          503:
            description: A connection to the Smartlogic API cannot be made.
            examples:
              application/json:
                message: Unable to connect to Smartlogic
  /concept/{uuid}:
    get:
      summary: Get Smartlogic payload for a concept
      tags:
        - Functional
      produces:
        - application/json
      parameters:
        - name: uuid
          in: path
          description: UUID of concept to retrieve.
      responses:
        200:
          description: The concept was found in Smartlogic.
        404:
          description: The concept does not exist in Smartlogic.
          examples:
            application/json:
              message: Concept not found in Smartlogic.
              uuid: 61d707b5-6fab-3541-b017-49b72de80772
        405:
          description: If any HTTP method other than GET is received.
        500:
          description: There was a problem obtaining the full concept.
          examples:
            application/json:
              message: Unable to retrieve concept from Smartlogic
              uuid: 61d707b5-6fab-3541-b017-49b72de80772
        503:
          description: A connection to the Smartlogic API cannot be made.
          examples:
            application/json:
              message: Unable to connect to Smartlogic

  /__health:
    get:
      summary: Healthchecks
      description: Runs application healthchecks and returns FT Healthcheck style json.
      produces:
        - application/json
      tags:
        - Health
      responses:
        200:
          description: Should always return 200 along with the output of the healthchecks - regardless of whether the healthchecks failed or not. Please inspect the overall `ok` property to see whether or not the application is healthy.
          examples:
            application/json:
              checks:
                - businessImpact: "No Business Impact."
                  checkOutput: "OK"
                  lastUpdated: "2017-01-16T10:26:47.222805121Z"
                  name: "Smartlogic Notifier healthchecks"
                  ok: true
                  panicGuide: "https://dewey.ft.com/smartlogic-notifier.html"
                  severity: 1
                  technicalSummary: "A technical summary."
              description: TODO
              name: "Smartlogic Notifier"
              ok: true
              schemaVersion: 1
  /__build-info:
    get:
      summary: Build Information
      description: Returns application build info, such as the git repository and revision, the golang version it was built with, and the app release version.
      produces:
       - application/json; charset=UTF-8
      tags:
        - Info
      responses:
        200:
          description: Outputs build information as described in the summary.
          examples:
            application/json; charset=UTF-8:
              version: "0.0.7"
              repository: "https://github.com/Financial-Times/smartlogic-notifier.git"
              revision: "7cdbdb18b4a518eef3ebb1b545fc124612f9d7cd"
              builder: "go version go1.6.3 linux/amd64"
              dateTime: "20161123122615"
  /__gtg:
    get:
      summary: Good To Go
      description: Lightly healthchecks the application, and returns a 200 if it's Good-To-Go.
      tags:
        - Health
      responses:
        200:
           description: The application is healthy enough to perform all its functions correctly - i.e. good to go.
        503:
           description: One or more of the applications healthchecks have failed, so please do not use the app. See the /__health endpoint for more detailed information.