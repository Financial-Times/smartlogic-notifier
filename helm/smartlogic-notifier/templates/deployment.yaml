apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    visualize: "true"
    app: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: {{ .Values.service.accountName }}
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: SMARTLOGIC_BASE_URL
          valueFrom:
            secretKeyRef:
              name: doppler-global-secrets
              key: SMARTLOGIC_BASE_URL
        - name: SMARTLOGIC_MODEL
          valueFrom:
            secretKeyRef:
              name: doppler-global-secrets
              key: {{ .Values.config.smartlogicModelKey }}
        - name: SMARTLOGIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: doppler-global-secrets
              key: SMARTLOGIC_API_KEY
        - name: SMARTLOGIC_TIMEOUT
          value: {{ .Values.config.smartlogicTimeout }}
        - name: KAFKA_ADDRESSES
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: msk.kafka.broker.url
        - name: KAFKA_CLUSTER_ARN
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: msk.kafka.cluster.arn
        - name: SMARTLOGIC_HEALTHCHECK_CONCEPT
          value: {{ .Values.config.smartlogicHealthcheckConcept }}
        - name: KAFKA_TOPIC
          value: {{ .Values.config.kafkaTopic }}
        - name: CONCEPT_URI_PREFIX
          value: {{ .Values.config.conceptUriPrefix }}
        - name: LOG_LEVEL
          value: {{ .Values.config.logLevel }}
        - name: HEALTHCHECK_SUCCESS_CACHE_TIME
          value: "1m"
        ports:
        - containerPort: 8080
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: "/__gtg"
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
        resources:
{{ toYaml .Values.resources | indent 12 }}

